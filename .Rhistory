result<-factor(lvl[out],lvl)
return(result)
}
sim.n.year.strat1<-function(n=20,data.x,eng.list,MDL.setup,save="risk engine/RUN/SIM"){
## dir
save<-save%>%p.slash
if(!dir.exists(save))dir.create(save)
## run id
run.id<-str_c("SIM",Sys.time()%>%str_replace_all("[^[:digit:]]",""))
run.fd<-str_c(save,run.id,"/")
if(!dir.exists(run.fd))dir.create(run.fd)
## simulation
data.x.curr<-data.x
saveRDS(data.x,str_c(run.fd,"Y000.RDS"))
for(yr in 1:n){
data.x.curr<-sim.1y.strat1(data.x.curr,eng.list)
fn<-str_c("Y",sprintf("%03d",yr))
saveRDS(data.x.curr,str_c(run.fd,fn,".RDS"))
print(str_c(fn," simulated and saved. (",yr,"/",n,")"))
}
}
source("risk engine/strat1.RE.R")
source("risk engine/strat1.sim.R")
sim.n.year.strat1<-function(n=20,data.x,eng.list,MDL.setup,save="risk engine/RUN/SIM"){
## dir
save<-save%>%p.slash
if(!dir.exists(save))dir.create(save)
## run id
run.id<-str_c("SIM",Sys.time()%>%str_replace_all("[^[:digit:]]",""))
run.fd<-str_c(save,run.id,"/")
if(!dir.exists(run.fd))dir.create(run.fd)
## simulation
data.x.curr<-data.x
saveRDS(data.x,str_c(run.fd,"Y000.RDS"))
for(yr in 1:n){
data.x.curr<-sim.1y.strat1(data.x.curr,eng.list)
fn<-str_c("Y",sprintf("%03d",yr))
saveRDS(data.x.curr,str_c(run.fd,fn,".RDS"))
print(str_c(fn," simulated and saved. (",yr,"/",n,")"))
}
print(str_c("Simulation saved in ",run.fd))
return(run.fd)
}
sim.n.year.strat1<-function(nyear=20,data.x,eng.list,MDL.setup,N=NULL,save="risk engine/RUN/SIM"){
## dir
save<-save%>%p.slash
if(!dir.exists(save))dir.create(save)
## run id
run.id<-str_c("SIM",Sys.time()%>%str_replace_all("[^[:digit:]]",""))
run.fd<-str_c(save,run.id,"/")
if(!dir.exists(run.fd))dir.create(run.fd)
## simulation
if(!is.null(N)){
sp.ind<-sample(1:nrow(data.x),N,replace=T)
data.x.curr<-data.x[sp.ind,c("Age",riskcat)]
}else{
data.x.curr<-data.x[,c("Age",riskcat)]
}
saveRDS(data.x,str_c(run.fd,"Y000.RDS"))
for(yr in 1:nyear){
data.x.curr<-sim.1y.strat1(data.x.curr,eng.list)
fn<-str_c("Y",sprintf("%03d",yr))
saveRDS(data.x.curr,str_c(run.fd,fn,".RDS"))
print(str_c(fn," simulated and saved. (",yr,"/",nyear,")"))
}
print(str_c("Simulation saved in ",run.fd))
return(run.fd)
}
save="risk engine/RUN/SIM"
nyear=30
eng.list.strat1<-get.eng.list.strat1(data.x,data.y,MDL.setup,simp=T)
get.eng.list.strat1
eng.list.strat1<-get.eng.list.strat1(data.x,data.y,MDL.setup)
sim.n.year.strat1<-function(nyear=30,data.x,eng.list,MDL.setup,N=NULL,save="risk engine/RUN/SIM"){
## dir
save<-save%>%p.slash
if(!dir.exists(save))dir.create(save)
## run id
run.id<-str_c("SIM",Sys.time()%>%str_replace_all("[^[:digit:]]",""))
run.fd<-str_c(save,run.id,"/")
if(!dir.exists(run.fd))dir.create(run.fd)
## simulation
if(!is.null(N)){
sp.ind<-sample(1:nrow(data.x),N,replace=T)
data.x.curr<-data.x[sp.ind,c("Age",riskcat)]
}else{
data.x.curr<-data.x[,c("Age",riskcat)]
}
saveRDS(data.x,str_c(run.fd,"Y000.RDS"))
for(yr in 1:nyear){
data.x.curr<-sim.1y.strat1(data.x.curr,eng.list)
fn<-str_c("Y",sprintf("%03d",yr))
saveRDS(data.x.curr,str_c(run.fd,fn,".RDS"))
print(str_c(fn," simulated and saved. (",yr,"/",nyear,")"))
}
print(str_c("Simulation saved in ",run.fd))
return(run.fd)
}
run.fd.strat1<-sim.n.year.strat1(30,data.x,eng.list.strat1,MDL.setup,N=50000)
sim.n.year.strat1<-function(nyear=30,data.x,eng.list,MDL.setup,N=NULL,save="risk engine/RUN/SIM"){
## dir
save<-save%>%p.slash
if(!dir.exists(save))dir.create(save)
## run id
run.id<-str_c("SIM",Sys.time()%>%str_replace_all("[^[:digit:]]",""))
run.fd<-str_c(save,run.id,"/")
if(!dir.exists(run.fd))dir.create(run.fd)
## simulation
if(!is.null(N)){
sp.ind<-sample(1:nrow(data.x),N,replace=T)
data.x.curr<-data.x[sp.ind,]
}else{
data.x.curr<-data.x[,]
}
saveRDS(data.x,str_c(run.fd,"Y000.RDS"))
for(yr in 1:nyear){
data.x.curr<-sim.1y.strat1(data.x.curr,eng.list)
fn<-str_c("Y",sprintf("%03d",yr))
saveRDS(data.x.curr,str_c(run.fd,fn,".RDS"))
print(str_c(fn," simulated and saved. (",yr,"/",nyear,")"))
}
print(str_c("Simulation saved in ",run.fd))
return(run.fd)
}
run.fd.strat1<-sim.n.year.strat1(30,data.x,eng.list.strat1,MDL.setup,N=50000)
## dir
save<-save%>%p.slash
if(!dir.exists(save))dir.create(save)
## run id
run.id<-str_c("SIM",Sys.time()%>%str_replace_all("[^[:digit:]]",""))
run.fd<-str_c(save,run.id,"/")
if(!dir.exists(run.fd))dir.create(run.fd)
!is.null(N)
sp.ind<-sample(1:nrow(data.x),N,replace=T)
data.x.curr<-data.x[sp.ind,]
saveRDS(data.x,str_c(run.fd,"Y000.RDS"))
for(yr in 1:nyear){
data.x.curr<-sim.1y.strat1(data.x.curr,eng.list.strat1)
fn<-str_c("Y",sprintf("%03d",yr))
saveRDS(data.x.curr,str_c(run.fd,fn,".RDS"))
print(str_c(fn," simulated and saved. (",yr,"/",nyear,")"))
}
names(data.x.curr)
sim.strat1<-function(data.x,eng.list){
eng.list.long<-eng.list%>%eng.list.trans.strat1
dice<-data.x%>%
mutate(Age=Age%>%simp.age.proc)%>%
.[,c("Age",riskcat)]%>%
left_join(eng.list.long)%>%
.[,-c(1:2)]
ind<-dice%>%apply(1,sum)%>%as.logical
out<-data.x[,riskcat]
out[ind]<-apply(dice[ind,],1,sim.vec)
lvl<-data.x[,riskcat]%>%levels
result<-factor(lvl[out],lvl)
return(result)
}
eng.list.long<-eng.list%>%eng.list.trans.strat1
eng.list.long<-eng.list.strat1%>%eng.list.trans.strat1
eng.list.strat1
tm.name<-names(eng.list.strat1)
eng.list.long<-tibble()
for(i in 2:length(eng.list.strat1)){
temp<-cbind(
Age=tm.name[i],
riskcat=rownames(eng.list.strat1[[i]]),
eng.list.strat1[[i]]%>%as.tibble
)
names(temp)[2]<-riskcat
eng.list.long<-rbind(eng.list.long,temp)
}
i
data.x<-readRDS(str_c(data.dir,"data2014_2.RDS"))
data.y<-readRDS(str_c(data.dir,"data2015_2.RDS"))
data.x$RiskCat<-factor(data.x$RiskCat,1:9)
eng.list.strat1<-get.eng.list.strat1(data.x,data.y,MDL.setup)
eng.list.strat1
run.fd.strat1<-sim.n.year.strat1(30,data.x,eng.list.strat1,MDL.setup,N=50000)
## dir
save<-save%>%p.slash
if(!dir.exists(save))dir.create(save)
## run id
run.id<-str_c("SIM",Sys.time()%>%str_replace_all("[^[:digit:]]",""))
run.fd<-str_c(save,run.id,"/")
if(!dir.exists(run.fd))dir.create(run.fd)
## simulation
if(!is.null(N)){
sp.ind<-sample(1:nrow(data.x),N,replace=T)
data.x.curr<-data.x[sp.ind,]
}else{
data.x.curr<-data.x[,]
}
saveRDS(data.x.curr,str_c(run.fd,"Y000.RDS"))
sim.n.year<-function(nyear,data.x,eng.list,MDL.setup,N=NULL,save="risk engine/RUN/SIM"){
## dir
save<-save%>%p.slash
if(!dir.exists(save))dir.create(save)
## run id
run.id<-str_c("SIM",Sys.time()%>%str_replace_all("[^[:digit:]]",""))
run.fd<-str_c(save,run.id,"/")
if(!dir.exists(run.fd))dir.create(run.fd)
## simulation
if(!is.null(N)){
sp.ind<-sample(1:nrow(data.x),N,replace=T)
data.x.curr<-data.x[sp.ind,]
}else{
data.x.curr<-data.x
}
saveRDS(data.x.curr,str_c(run.fd,"Y000.RDS"))
for(yr in 1:nyear){
data.x.curr<-sim.1y(data.x.curr,eng.list,MDL.setup)
fn<-str_c("Y",sprintf("%03d",yr))
saveRDS(data.x.curr,str_c(run.fd,fn,".RDS"))
print(str_c(fn," simulated and saved. (",yr,"/",nyear,")"))
}
print(str_c("Simulation saved in ",run.fd))
return(run.fd)
}
data.x.curr<-sim.1y.strat1(data.x.curr,eng.list)
data.x.curr<-sim.1y.strat1(data.x.curr,eng.list.strat1)
sim.n.year.strat1<-function(nyear=30,data.x,eng.list.strat1,MDL.setup,N=NULL,save="risk engine/RUN/SIM"){
## dir
save<-save%>%p.slash
if(!dir.exists(save))dir.create(save)
## run id
run.id<-str_c("SIM",Sys.time()%>%str_replace_all("[^[:digit:]]",""))
run.fd<-str_c(save,run.id,"/")
if(!dir.exists(run.fd))dir.create(run.fd)
## simulation
if(!is.null(N)){
sp.ind<-sample(1:nrow(data.x),N,replace=T)
data.x.curr<-data.x[sp.ind,]
}else{
data.x.curr<-data.x[,]
}
saveRDS(data.x.curr,str_c(run.fd,"Y000.RDS"))
for(yr in 1:nyear){
data.x.curr<-sim.1y.strat1(data.x.curr,eng.list.strat1)
fn<-str_c("Y",sprintf("%03d",yr))
saveRDS(data.x.curr,str_c(run.fd,fn,".RDS"))
print(str_c(fn," simulated and saved. (",yr,"/",nyear,")"))
}
print(str_c("Simulation saved in ",run.fd))
return(run.fd)
}
eng.list.long<-eng.list.strat1%>%eng.list.trans.strat1
data.x[,riskcat]<-sim.strat1(data.x,eng.list.long)
dice<-data.x%>%
mutate(Age=Age%>%simp.age.proc)%>%
.[,c("Age",riskcat)]%>%
left_join(eng.list.long)%>%
.[,-c(1:2)]
ind<-dice%>%apply(1,sum)%>%as.logical
out<-data.x[,riskcat]
out[ind]<-apply(dice[ind,],1,sim.vec)
lvl<-data.x[,riskcat]%>%levels
result<-factor(lvl[out],lvl)
sim.strat1<-function(data.x,eng.list.long){
dice<-data.x%>%
mutate(Age=Age%>%simp.age.proc)%>%
.[,c("Age",riskcat)]%>%
left_join(eng.list.long)%>%
.[,-c(1:2)]
ind<-dice%>%apply(1,sum)%>%as.logical
out<-data.x[,riskcat]
out[ind]<-apply(dice[ind,],1,sim.vec)
lvl<-data.x[,riskcat]%>%levels
result<-factor(lvl[out],lvl)
return(result)
}
data.x[,riskcat]<-sim.strat1(data.x,eng.list.long)
sim.1y.strat1<-function(data.x,eng.list.strat1){
eng.list.long<-eng.list.strat1%>%eng.list.trans.strat1
data.x[,riskcat]<-sim.strat1(data.x,eng.list.long)
return(data.x)
}
data.x<-readRDS(str_c(data.dir,"data2014_2.RDS"))
data.y<-readRDS(str_c(data.dir,"data2015_2.RDS"))
data.x$RiskCat<-factor(data.x$RiskCat,1:9)
eng.list.strat1<-get.eng.list.strat1(data.x,data.y,MDL.setup)
run.fd.strat1<-sim.n.year.strat1(30,data.x,eng.list.strat1,MDL.setup,N=50000)
sim.data.strat1<-get.sim(run.fd.strat1)
sim.data<-get.sim(run.fd.strat1)
oc.aggr<-get.oc.aggr()
ind.list.strat1<-get.ind.list()
sim.sum.strat1<-get.sum.list(ind.list.strat1)
sim.sum.strat1$All$prog$RiskCat%>%vis.prog("")
sim.sum.strat1$All$oc.by.yr
sim.sum$All$oc.by.yr
View(data.x)
sim.1y.strat1<-function(data.x,eng.list.strat1){
eng.list.long<-eng.list.strat1%>%eng.list.trans.strat1
data.x[,riskcat]<-sim.strat1(data.x,eng.list.long)
data.x$Death<-(data.x[,riskcat]=="9")%>%as.numeric
return(data.x)
}
data.dir<-"data creation/data/chenny model/"
set.seed(527)
spind<-sample(1:639995,10000)
data.x<-readRDS(str_c(data.dir,"data2014_2.RDS"))[spind,]
data.y<-readRDS(str_c(data.dir,"data2015_2.RDS"))[spind,]
data.x$RiskCat<-factor(data.x$RiskCat,1:9)
MDL.setup<-readRDS(str_c(data.dir,"MDL.setup_1.RDS"))
source("risk engine/RE.gen.function.R")
source("risk engine/strat3.RE.R")
source("risk engine/strat3.sim.R")
source("visualization/sim vis/SimVis.function.R")
get.sum.strat1<-function(ind){
if(is.vector(ind)){
prev<-get.prev(ind)$Death
prog<-get.cat.prog(ind)$RiskCat
oc.by.yr<-get.OC.by.yr(ind)
oc.cumu<-get.oc.cumu(oc.by.yr)
list(
Death=prev,
RiskCat=prog,
oc.by.yr=oc.by.yr,
oc.cumu=oc.cumu
)
}else{
lapply(ind,get.sum.strat1)
}
}
source("risk engine/strat1.RE.R")
source("risk engine/strat1.sim.R")
data.x<-readRDS(str_c(data.dir,"data2014_2.RDS"))
data.y<-readRDS(str_c(data.dir,"data2015_2.RDS"))
data.x$RiskCat<-factor(data.x$RiskCat,1:9)
eng.list.strat1<-get.eng.list.strat1(data.x,data.y,MDL.setup)
run.fd.strat1<-sim.n.year.strat1(30,data.x,eng.list.strat1,MDL.setup,N=50000)
riskcat<-MDL.setup$Colname[MDL.setup$VarCat=="Risk Category"]
bin.var<-MDL.setup%>%
filter(VarCat%in%c("Risk Factor","Absorb")&VarType=="binary")%>%
select(Colname)%>%
unlist
fac.var<-MDL.setup%>%
filter(VarCat%in%c("Risk Factor","Risk Category")&VarType!="binary")%>%
select(Colname)%>%
unlist
eng.list.strat1<-get.eng.list.strat1(data.x,data.y,MDL.setup)
run.fd.strat1<-sim.n.year.strat1(30,data.x,eng.list.strat1,MDL.setup,N=50000)
get.sum.list.strat1<-function(ind.list){
result<-lapply(ind.list,get.sum.strat1)
result$MDL.setup<-MDL.setup
return(result)
}
sim.data<-get.sim(run.fd.strat1)
oc.aggr<-get.oc.aggr()
ind.list.strat1<-get.ind.list()
sim.sum.strat1<-get.sum.list.strat1(ind.list.strat1)
sim.sum.strat1$All$Death
sim.sum.strat1$All$prog$RiskCat%>%vis.prog("")
sim.sum.strat1$All$RiskCat
saveRDS(sim.sum.strat1,"Strat1.result.RDS")
dir.create("SimStratComp")
saveRDS(sim.sum.strat1,"SimStratComp/Strat1.result.RDS")
saveRDS(sim.sum.strat1,"SimStratComp/data/Strat1.result.RDS")
dir.create("SimStratComp/data/")
saveRDS(sim.sum.strat1,"SimStratComp/data/Strat1.result.RDS")
## dir
save<-save%>%p.slash
save="risk engine/RUN/PRED"
## dir
save<-save%>%p.slash
if(!dir.exists(save))dir.create(save)
run.id<-str_c("PRED",Sys.time()%>%str_replace_all("[^[:digit:]]",""))
run.id
run.fl<-str_c(save,run.id,".RDS")
saveRDS(eng.list.strat1,run.fl)
# require riskcat
get.eng.list.strat1<-function(data.x,data.y,MDL.setup,save="risk engine/RUN/PRED"){
eng.list<-list(type="strat1")
reg.data<-data.x%>%
mutate(Age=Age%>%simp.age.proc)
age.grp<-reg.data$Age%>%unique%>%sort
for(ag in age.grp){
ind<-reg.data$Age==ag
eng.list[[ag]]<-get.trans(riskcat,reg.data,data.y,ind)
print(str_c(ag," group transition matrix calculated"))
}
## dir
save<-save%>%p.slash
if(!dir.exists(save))dir.create(save)
run.id<-str_c("PRED",Sys.time()%>%str_replace_all("[^[:digit:]]",""))
run.fl<-str_c(save,run.id,".RDS")
saveRDS(eng.list,run.fl)
print(str_c(run.fl," saved!"))
return(eng.list)
}
trans<-list()
for(v in c(bin.var,fac.var)){
trans[[v]]<-get.trans(v,data.x,data.y)
print(v)
}
saveRDS(trans,"SimStratComp/data/trans.RDS")
data.dir<-"data creation/data/chenny model/"
set.seed(527)
spind<-sample(1:639995,10000)
data.x<-readRDS(str_c(data.dir,"data2014_2.RDS"))[spind,]
data.y<-readRDS(str_c(data.dir,"data2015_2.RDS"))[spind,]
data.x$RiskCat<-factor(data.x$RiskCat,1:9)
MDL.setup<-readRDS(str_c(data.dir,"MDL.setup_1.RDS"))
source("risk engine/RE.gen.function.R")
source("risk engine/strat3.RE.R")
source("risk engine/strat3.sim.R")
source("visualization/sim vis/SimVis.function.R")
riskcat<-MDL.setup$Colname[MDL.setup$VarCat=="Risk Category"]
bin.var<-MDL.setup%>%
filter(VarCat%in%c("Risk Factor","Absorb")&VarType=="binary")%>%
select(Colname)%>%
unlist
fac.var<-MDL.setup%>%
filter(VarCat%in%c("Risk Factor","Risk Category")&VarType!="binary")%>%
select(Colname)%>%
unlist
eng.list<-get.eng.list.strat3(data.x,data.y,MDL.setup,simp=T)
run.fd<-sim.n.year(30,data.x,eng.list,MDL.setup,50000)
sim.data<-get.sim(run.fd)
oc.aggr<-get.oc.aggr()
ind.list<-get.ind.list()
sim.sum<-get.sum.list(ind.list)
sys.tim()
Sys.time()
t0<-Sys.time()
eng.list<-get.eng.list.strat3(data.x,data.y,MDL.setup,simp=T)
t1<-Sys.time()
run.fd<-sim.n.year(30,data.x,eng.list,MDL.setup,50000)
t2<-Sys.time()
sim.data<-get.sim(run.fd)
oc.aggr<-get.oc.aggr()
ind.list<-get.ind.list()
sim.sum<-get.sum.list(ind.list)
t3<-Sys.time()
saveRDS(sim.sum,"SimStratComp/data/Strat3.result.RDS")
# training RE time
t1-t0
# simulation time
t2-t1
# simulation interpret
t3-t2
mdl1<-readRDS("data/Strat1.result.RDS")
mdl1<-readRDS("data/Strat1.result.RDS")
mdl3<-readRDS("data/Strat3.result.RDS")
trans<-readRDS("data/trans.RDS")
mdl1$All$RiskCat%>%apply(1,function(x)x/sum(x))
mdl1$All$RiskCat%>%apply(1,function(x)x/sum(x))%>%t%>%as.tibble
x<-mdl1$All$RiskCat
cbind(
year=x[,1],
x[,-1]%>%apply(1,function(x)round(x/sum(x)*100,1))%>%t
)%>%as.tibble
tibble(
year=as.integer(x[,1]),
x[,-1]%>%apply(1,function(x)round(x/sum(x)*100,1))%>%t
)
cbind(
year=as.integer(x[,1]),
x[,-1]%>%apply(1,function(x)round(x/sum(x)*100,1))%>%t%>%as.tibble
)
cat2perc<-function(x){
cbind(
year=as.integer(x[,1]),
x[,-1]%>%apply(1,function(x)round(x/sum(x)*100,1))%>%t%>%as.tibble
)
}
mdl1$All$RiskCat%>%cat2perc
mdl3$All$prev$RiskCat%>%cat2perc
mdl3$All$prev$RiskCat
mdl3$All$prog$RiskCat%>%cat2perc
dir.create("SimStratComp/code/")
file.copy("visualization/sim vis/SimVis.function.R","SimStratComp/code/SimVis.function.R")
source("code/SimVis.function.R")
??kabble
??kable
mdl1$All$RiskCat%>%cat2perc%>%kable
require(knitr)
mdl1$All$RiskCat%>%cat2perc%>%kable
require(tidyverse)
require(knitr)
source("code/SimVis.function.R")
mdl1<-readRDS("data/Strat1.result.RDS")
mdl3<-readRDS("data/Strat3.result.RDS")
trans<-readRDS("data/trans.RDS")
mdl1$All$RiskCat%>%cat2perc%>%kable
mdl1$All$oc.cumu%>%kable
mdl3$All$oc.cumu%>%kable
cbind(
year=mdl1$MediFund$`1`$oc.cumu[,1]
mdl1$MediFund$`1`$oc.cumu[,-1]-mdl1$MediFund$`0`$oc.cumu[,-1]
mdl1$MediFund$`1`$oc.cumu[,1]
cbind(
year=mdl1$MediFund$`1`$oc.cumu[,1],
mdl1$MediFund$`1`$oc.cumu[,-1]-mdl1$MediFund$`0`$oc.cumu[,-1]
)%>%kable
cbind(
year=mdl1$MediFund$`1`$oc.cumu[,1],
mdl1$MediFund$`1`$oc.cumu[,-1]-mdl1$MediFund$`0`$oc.cumu[,-1]
)%>%kable
require(tidyverse)
require(knitr)
source("code/SimVis.function.R")
mdl1<-readRDS("data/Strat1.result.RDS")
mdl3<-readRDS("data/Strat3.result.RDS")
trans<-readRDS("data/trans.RDS")
mdl1$All$RiskCat%>%cat2perc%>%tail%>%kable
mdl3$All$prog$RiskCat%>%cat2perc%>%tail%>%kable
mdl1$All$oc.cumu%>%tail%>%kable
mdl3$All$oc.cumu%>%tail%>%kable
mdl1$MediFund$`1`$oc.cumu%>%tail%>%kable
mdl3$MediFund$`1`$oc.cumu%>%tail%>%kable
mdl1$All$RiskCat%>%vis.prog("")
mdl3$All$prog$RiskCat%>%vis.prog("")
